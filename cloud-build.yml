steps:
  - name: node:14.15.4
    entrypoint: yarn
    args: ['create-env']
    env:
      - 'NEXT_PUBLIC_API_KEY=${_NEXT_PUBLIC_API_KEY}'
      - 'NEXT_PUBLIC_AUTH_DOMAIN=${_NEXT_PUBLIC_AUTH_DOMAIN}'
      - 'NEXT_PUBLIC_PROJECT_ID=${_NEXT_PUBLIC_PROJECT_ID}'
      - 'NEXT_PUBLIC_STORAGE_BUCKET=${_NEXT_PUBLIC_STORAGE_BUCKET}'
      - 'NEXT_PUBLIC_MESSAGING_SENDER_ID=${_NEXT_PUBLIC_MESSAGING_SENDER_ID}'
      - 'NEXT_PUBLIC_APP_ID=${_NEXT_PUBLIC_APP_ID}'

  # Build the container image
  - name: gcr.io/cloud-builders/docker
    args:
      [
        'build',
        '-f',
        'Dockerfile',
        '-t',
        'gcr.io/${_NEXT_PUBLIC_PROJECT_ID}/test:latest',
        '--cache-from',
        'gcr.io/${_NEXT_PUBLIC_PROJECT_ID}/test:latest',
        '.',
      ]

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${_NEXT_PUBLIC_PROJECT_ID}/test:latest']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        '${_NEXT_PUBLIC_PROJECT_ID}',
        '--image',
        'gcr.io/${_NEXT_PUBLIC_PROJECT_ID}/test:latest',
        '--region',
        '${_DEPLOY_REGION}',
      ]

  - name: gcr.io/${_NEXT_PUBLIC_PROJECT_ID}/firebase
    args: ['deploy', '--project=${_NEXT_PUBLIC_PROJECT_ID}']

images: ['gcr.io/${_NEXT_PUBLIC_PROJECT_ID}/test']
timeout: '1600s'
